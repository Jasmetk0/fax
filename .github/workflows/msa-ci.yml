name: MSA CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # fallback tools if not pinned in requirements
          pip install --upgrade ruff black pytest

      - name: Export PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Lint (ruff)
        run: ruff check .

      - name: Format check (black)
        run: black --check .

      - name: Pytest
        run: pytest -q

      - name: Compliance (generate reports)
        run: |
          # Generate reports; ignore exit code here
          python dev/check_msa_compliance.py --strict \
            --verify-out VERIFICATION_FULL_MSA.md \
            --json-out VERIFICATION_FULL_MSA.json || true

      - name: Gate on reports (no FAIL allowed)
        run: |
          python - <<'PY'
          import json, sys, pathlib, re

          ok = True

          vf = pathlib.Path("VERIFICATION_FULL_MSA.json")
          if vf.exists():
              try:
                  data = json.loads(vf.read_text(encoding="utf-8"))
                  fails = [r.get("id") for r in data.get("ars", []) if r.get("status") == "FAIL"]
                  if fails:
                      print("AR FAILS:", fails)
                      ok = False
              except Exception as e:
                  print("Could not parse VERIFICATION_FULL_MSA.json:", e)
                  ok = False
          else:
              print("Missing VERIFICATION_FULL_MSA.json")
              ok = False

          cf = pathlib.Path("COMPLIANCE_MSA.md")
          if cf.exists():
              md = cf.read_text(encoding="utf-8")
              if re.search(r"^\\s*-\\s*Exit status:\\s*PASS\\b", md, flags=re.IGNORECASE|re.MULTILINE) is None:
                  print("Compliance exit status is not PASS")
                  ok = False
          else:
              print("Missing COMPLIANCE_MSA.md")
              ok = False

          sys.exit(0 if ok else 1)
          PY

      - name: Upload reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: msa-reports
          path: |
            COMPLIANCE_MSA.md
            VERIFICATION_FULL_MSA.md
            VERIFICATION_FULL_MSA.json
