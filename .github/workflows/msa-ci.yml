name: MSA CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # fallback tools if not pinned in requirements
          pip install --upgrade ruff black pytest

      - name: Export PYTHONPATH
        run: echo "PYTHONPATH=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Lint (ruff)
        run: ruff check .

      - name: Format check (black)
        run: black --check .

      - name: Pytest
        run: pytest -q

      - name: Compliance
        run: |
          python dev/check_msa_compliance.py --strict \
            --verify-out VERIFICATION_FULL_MSA.md \
            --json-out VERIFICATION_FULL_MSA.json

      - name: Upload reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: msa-reports
          path: |
            COMPLIANCE_MSA.md
            VERIFICATION_FULL_MSA.md
            VERIFICATION_FULL_MSA.json
